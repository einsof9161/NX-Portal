<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
>
	
	<!-- 載入nx property屬性 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:nx.properties" />
	
	<context:component-scan base-package="com.nx"><!-- base-package 如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 開啟於事務管理的tx:annotation-driven 驅動 -->
	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
	
	
	<!-- 使用HibernateTransactionManager  來做 transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <!-- 將sessionFactiry 注入 -->
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>
    
   
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.nx"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache.xml</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">indexes</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<!-- <property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property> -->
	</bean>
	
	<!-- 使用com.zaxxer.hikari.HikariDataSource 建立Connection pool -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <constructor-arg ref="hikariConfig" />
	</bean>
	
	<!-- HikariDataSource HikariDataSource相關配置  -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	    <property name="poolName" value="springHikariCP" />
	    <property name="connectionTestQuery" value="SELECT 1" />
	    <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
	    <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${jdbc.url}</prop>
	            <prop key="user">${jdbc.username}</prop>
	            <prop key="password">${jdbc.password}</prop>
	        </props>
	    </property>
	</bean>
</beans>